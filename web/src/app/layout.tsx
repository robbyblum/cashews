import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Providers from "./providers";
import { getQueryClient } from "@/get-query-client";
import {
  dehydrate,
  DehydratedState,
  HydrationBoundary,
  QueryClient,
} from "@tanstack/react-query";

// disable trying to pregenerate static pages
export const dynamic = 'force-dynamic';

import SiteHeader from "@/components/SiteHeader";
import { getBasicLeagues, getBasicTeams } from "@/data/data";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const queryClient = getQueryClient();

  await Promise.all([
    queryClient.prefetchQuery({
      queryKey: ["teams"],
      queryFn: getBasicTeams,
    }),
    queryClient.prefetchQuery({
      queryKey: ["leagues"],
      queryFn: getBasicLeagues,
    }),
  ]);

  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} font-[family-name:var(--font-geist-sans)] antialiased h-screen flex flex-col`}
      >
        <Providers>
          <SiteHeader />
          <div className="container mx-auto relative flex-1">{children}</div>
        </Providers>
      </body>
    </html>
  );
}
